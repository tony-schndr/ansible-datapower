---
- include_role:
    name: dp_docker
  vars:
    version: "{{ dp_version }}"

- name: Delete the foo domain
  community.datapower.config:
    domain: default
    state: deleted
    config:
      Domain:
        mAdminState: enabled
        name: foo

- name: Create the foo domain
  community.datapower.config:
    domain: default
    state: merged
    config:
      Domain:
        mAdminState: enabled
        name: foo

### Adding an additional field to config test ###
# setup test config
- name: Create the log target
  community.datapower.config:
    domain: foo
    state: merged
    config:
      LogTarget:
        IdleTimeout: 15
        LocalAddress: 0.0.0.0
        LocalIdentifier: dp-1
        LogEvents:
          Class:
            value: all
          Priority: notice
        LogPrecision: second
        LongRetryInterval: 20
        Priority: normal
        RateLimit: 100
        RemoteAddress: 192.168.168.88
        RemotePort: 514
        RetryAttempts: 1
        RetryInterval: 1
        Rotate: 3
        SSLClientConfigType: proxy
        Size: 500
        SoapVersion: soap11
        SyslogFacility: user
        TimestampFormat: zulu
        Type: syslog-tcp
        UploadMethod: ftp
        UseANSIColor: 'off'
        mAdminState: enabled
        name: syslog_LogTarget

- name: Get before syslog_LogTarget
  community.datapower.get_config:
    domain: foo
    class_name: LogTarget
    name: syslog_LogTarget
  register: before_syslog_LogTarget

# Add new field "LogEventFilter" to config.
- name: Add event filters to log target
  community.datapower.config:
    domain: foo
    state: merged
    config:
      LogTarget:
        IdleTimeout: 15
        LocalAddress: 0.0.0.0
        LocalIdentifier: dp-1
        LogEventFilter:
        - '0x080c00010'
        - '0x08580005c'
        - '0x85a0000a'
        LogEvents:
          Class:
            value: all
          Priority: notice
        LogPrecision: second
        LongRetryInterval: 20
        Priority: normal
        RateLimit: 100
        RemoteAddress: 192.168.168.88
        RemotePort: 514
        RetryAttempts: 1
        RetryInterval: 1
        Rotate: 3
        SSLClientConfigType: proxy
        Size: 500
        SoapVersion: soap11
        SyslogFacility: user
        TimestampFormat: zulu
        Type: syslog-tcp
        UploadMethod: ftp
        UseANSIColor: 'off'
        mAdminState: enabled
        name: syslog_LogTarget

- name: Get after syslog_LogTarget
  community.datapower.get_config:
    domain: foo
    class_name: LogTarget
    name: syslog_LogTarget
  register: after_syslog_LogTarget

- name: Assert the param LogEventFilter did not exist and was added.
  assert:
    that:
      - "{{ 'LogEventFilter' not in before_syslog_LogTarget['response']['LogTarget'] }}"
      - "{{ 'LogEventFilter' in after_syslog_LogTarget['response']['LogTarget'] }}"
  ignore_errors: no

### Change config, validate the data changed and changed variable is True. ###
- name: Get LogTarget
  community.datapower.get_config:
    domain: foo
    class_name: LogTarget
    name: syslog_LogTarget
  register: before

- name: Assert LogTarget configuration was retrieved.
  assert:
    that:
      - "{{ before['response']['LogTarget']['mAdminState'] == 'enabled' }}"

- name: Disable the LogTarget object
  community.datapower.config:
    domain: foo
    state: merged
    config:
      LogTarget:
        name: syslog_LogTarget
        mAdminState: disabled
  register: config_disabled

- name: Get LogTarget
  community.datapower.get_config:
    domain: foo
    class_name: LogTarget
    name: syslog_LogTarget
  register: changed

- name: Assert config changed and task "Disable the LogTarget object" changed is true
  assert:
    that:
      - "{{ changed['response']['LogTarget']['mAdminState'] == 'disabled' }}"
      - "{{ changed != before  }}"
      - config_disabled.changed == true

### Execute change again and confirm changed is false.  If state matches no change should be executed ###
- name: Make same change as step "Disable the LogTarget object"
  community.datapower.config:
    domain: foo
    state: merged
    config:
      LogTarget:
        name: syslog_LogTarget
        mAdminState: disabled
  register: config_disabled_not_changed

- name: Get LogTarget
  community.datapower.get_config:
    domain: foo
    class_name: LogTarget
    name: syslog_LogTarget
  register: unchanged

- name: Assert state is unchanged and task 'Make same change as "Disable the LogTarget object"' changed is false
  assert:
    that:
      - "{{ changed == unchanged  }}"
      - config_disabled_not_changed.changed == false

### Test list property updates ###
- name: Delete syslog_LogTarget
  community.datapower.config:
    domain: foo
    state: deleted
    config:
      LogTarget:
        name: syslog_LogTarget

- name: Create syslog_LogTarget
  community.datapower.config:
    domain: foo
    state: merged
    config:
      LogTarget:
        IdleTimeout: 15
        LocalAddress: 0.0.0.0
        LocalIdentifier: dp-1
        LogEvents:
          Class:
            value: all
          Priority: notice
        LogPrecision: second
        LongRetryInterval: 20
        Priority: normal
        RateLimit: 100
        RemoteAddress: 192.168.168.88
        RemotePort: 514
        RetryAttempts: 1
        RetryInterval: 1
        Rotate: 3
        SSLClientConfigType: proxy
        Size: 500
        SoapVersion: soap11
        SyslogFacility: user
        TimestampFormat: zulu
        Type: syslog-tcp
        UploadMethod: ftp
        UseANSIColor: 'off'
        mAdminState: enabled
        name: syslog_LogTarget

- name: Update syslog_LogTarget list property to 1 item.
  community.datapower.config:
    domain: foo
    state: merged
    config:
      LogTarget:
        name: syslog_LogTarget
        LogEventFilter:
        - '0x080c00010'
  register: list_prop_update_result

- name: Get LogTarget to check its state was update.
  community.datapower.get_config:
    domain: foo
    class_name: LogTarget
    name: syslog_LogTarget
  register: syslog_LogTarget

- name: Assert the list property was updated to 1 item.
  assert:
    that:
      - "{{ syslog_LogTarget['response']['LogTarget']['LogEventFilter'] is defined }}"
      - "{{ list_prop_update_result['response']['syslog_LogTarget'] == 'Configuration was updated.'  }}"
  ignore_errors: no

- name: Update list property to 4 items.
  community.datapower.config:
    domain: foo
    state: merged
    config:
      LogTarget:
        name: syslog_LogTarget
        LogEventFilter:
        - '0x080c00010'
        - '0x08580005c'
        - '0x85a0000a'
  register: list_prop_update_result

- name: get updated config
  community.datapower.get_config:
    domain: foo
    class_name: LogTarget
    name: syslog_LogTarget
  register: syslog_LogTarget

- name: Assert the list property was updated to 3 items.
  assert:
    that:
      - "{{ syslog_LogTarget['response']['LogTarget']['LogEventFilter'] | length == 3 }}"
      - "{{ list_prop_update_result['response']['syslog_LogTarget'] == 'Configuration was updated.' }}"

- name: Update list property to 0 items.
  community.datapower.config:
    domain: foo
    state: replaced
    config:
      LogTarget:
        name: syslog_LogTarget
        LogEventFilter: {}
  register: list_prop_update_result

- name: get updated config
  community.datapower.get_config:
    domain: foo
    class_name: LogTarget
    name: syslog_LogTarget
  register: syslog_LogTarget

- name: Assert the list property was updated to 0 items.
  assert:
    that:
      - "{{ 'LogEventFilter' not in syslog_LogTarget['response']['LogTarget'] }}"
      - "{{ list_prop_update_result['response']['syslog_LogTarget'] == 'Configuration was updated.' }}"

# Tear down
- name: Delete the foo domain
  community.datapower.config:
    domain: default
    state: deleted
    config:
      Domain:
        mAdminState: enabled
        name: foo