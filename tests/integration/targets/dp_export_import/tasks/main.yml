---
- include_role:
    name: dp_docker
  vars:
    version: "{{ dp_version }}"

- name: SETUP - Delete the snafu/foo application domain
  community.datapower.config:
    domain: default
    state: absent
    config:
      Domain:
        mAdminState: enabled
        name: "{{ item }}"
  with_items:
    - snafu
    - foo

- name: SETUP - Create the snafu/foo application domain
  community.datapower.config:
    domain: default
    state: present
    config:
      Domain:
        mAdminState: enabled
        name: "{{ item }}"
  with_items:
    - snafu
    - foo

- name: Save default domain
  community.datapower.action:
    domain: default
    action: SaveConfig

- name: Import a service into to snafu domain
  community.datapower.import_zip:
    domain: snafu
    export_path: "{{ role_path }}/files/GetStat_MPG_and_LogCategory.zip"

- name: Export service from snafu domain
  community.datapower.export_zip:
    domain: snafu
    ref_objects: yes
    ref_files: yes
    dest: /var/tmp
    objects:
      - name: GetStat_MPG
        class: MultiProtocolGateway
  register: GetStat_export

- name: Assert service is exported
  assert:
    that:
      - "{{GetStat_export.response.status == 'completed'}}"

- name: Save snafu after installing service
  community.datapower.action:
    domain: snafu
    action: SaveConfig

- name: Import the service exported from snafu domain into foo domain
  community.datapower.import_zip:
    domain: foo
    export_path: "{{ GetStat_export.path }}"

- name: Save snafu after installing service
  community.datapower.action:
    domain: foo
    action: SaveConfig

- name: Get configuration to verify service was imported
  community.datapower.get_config:
    domain: "{{ item }}"
    name: 'GetStat_MPG'
    class_name: MultiProtocolGateway
  register: service_state
  with_items:
    - foo
    - snafu

- name: Assert service was imported into foo and snafu
  assert:
    that:
      - "{{'MultiProtocolGateway' in item.response }}"
  with_items: "{{service_state.results}}"

- name: Export all domains
  community.datapower.backup_domains:
    dest: ./work/
  register: all_domains_export

- name: Export foo domain from datapower config
  community.datapower.backup_domains:
    dest: ./work/
    all_files: yes
    domains:
      - foo
  register: foo_domain_export

- name: Delete the snafu/foo application domain to verify restoration from all_domains_export
  community.datapower.config:
    domain: default
    state: absent
    config:
      Domain:
        mAdminState: enabled
        name: "{{ item }}"
  with_items:
    - snafu
    - foo

- name: Save default domain after deleting foo/snafu
  community.datapower.action:
    domain: default
    action: SaveConfig

- name: Import the all_domains_export
  community.datapower.restore_domains:
    overwrite_objects: yes
    overwrite_files: yes
    export_path: "{{all_domains_export.path}}"

- name: Save all domains
  community.datapower.action:
    domain: "{{ item }}"
    action: SaveConfig
  with_items:
    - snafu
    - foo
    - default

- name: Get configuration to verify service was imported
  community.datapower.get_config:
    domain: "{{ item }}"
    name: 'GetStat_MPG'
    class_name: MultiProtocolGateway
  register: service_state
  with_items:
    - foo
    - snafu

- name: Assert service was imported into foo and snafu
  assert:
    that:
      - "{{'MultiProtocolGateway' in item.response }}"
  with_items: "{{service_state.results}}"

- name: Delete the snafu/foo application domain to verify foo is restored from foo_export and snafu is not.
  community.datapower.config:
    domain: default
    state: absent
    config:
      Domain:
        mAdminState: enabled
        name: "{{ item }}"
  with_items:
    - snafu
    - foo

- name: Save default domain after deleting foo/snafu
  community.datapower.action:
    domain:  default
    action: SaveConfig

- name: Import the foo_export
  community.datapower.restore_domains:
    overwrite_objects: yes
    overwrite_files: yes
    export_path: "{{foo_domain_export.path}}"

- name: Save default/foo domain after importing foo domain.
  community.datapower.action:
    domain:  "{{ item }}"
    action: SaveConfig
  with_items:
    - default
    - foo

- name: Get configuration to verify service was imported
  community.datapower.get_config:
    domain: "{{ item }}"
    name: 'GetStat_MPG'
    class_name: MultiProtocolGateway
  register: service_state
  with_items:
    - foo

- name: Assert foo domain was restored.
  assert:
    that:
      - "{{'MultiProtocolGateway' in item.response }}"
  with_items: "{{service_state.results}}"


- name: Get configuration to verify snafu domain was not restored
  community.datapower.get_config:
    domain: default
    class_name: Domain
  register: domain


- name: Assert snafu domain does not exist
  assert:
    that:
      - "{{'snafu' not in item.name}}"
  with_items: "{{domain.response.Domain}}"