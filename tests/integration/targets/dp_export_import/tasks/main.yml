---
- include_role:
    name: dp_docker
  vars:
    version: "{{ dp_version }}"

- name: Delete the snafu/foo application domain
  community.datapower.config:
    domain: default
    state: absent
    config:
      Domain:
        mAdminState: enabled
        name: "{{ item }}"
  with_items:
    - snafu
    - foo

- name: Create the snafu/foo application domain
  community.datapower.import_config:
    domain: default
    objects:
      Domain:
        mAdminState: enabled
        name: "{{ item }}"
  with_items:
    - snafu
    - foo

- name: Save default domain
  community.datapower.action:
    domain: default
    action: SaveConfig

- name: Export non-existent config
  community.datapower.export_config:
    domain: snafu
    ref_objects: yes
    objects:
      - name: valcred
        class: CryptoValCred
  register: null_export

- name: Assert export.objects is None
  assert:
    that:
      - "{{null_export.objects == None}}"

- name: Create objects to export and load into other domains
  community.datapower.import_config:
    domain: snafu
    objects: "{{ lookup('file','{{ role_path }}/files/object-export.json') | from_json}}"

- name: Save snafu after loading objects
  community.datapower.action:
    domain: snafu
    action: SaveConfig

- name: Export objects
  community.datapower.export_config:
    domain: snafu
    ref_objects: yes
    objects:
      - name: valcred
        class: CryptoValCred
      - name: tls-client-profile
        class: SSLClientProfile
  register: snafu_export

- name: load objects
  community.datapower.import_config:
    domain: foo
    objects: "{{snafu_export.objects}}"

- name: Save foo after loading objects
  community.datapower.action:
    domain: foo
    action: SaveConfig

- name: Export objects from foo for validation
  community.datapower.export_config:
    domain: foo
    ref_objects: yes
    objects:
      - name: valcred
        class: CryptoValCred
      - name: tls-client-profile
        class: SSLClientProfile
  register: foo_export

- name: Assert expected configuration is loaded in the foo domain.
  assert:
    that:
      - "{{'SSLClientProfile' in foo_export.objects}}"
      - "{{'CryptoValCred' in foo_export.objects}}"

- name: Export all domains
  community.datapower.export_domains:
    dest: ./work/
  register: all_domains_export

- name: Export foo domain from datapower config
  community.datapower.export_domains:
    dest: ./work/
    all_files: yes
    domains:
      - foo
  register: foo_domain_export

- name: Delete the snafu/foo application domain to verify restoration from all_domains_export
  community.datapower.config:
    domain: default
    state: absent
    config:
      Domain:
        mAdminState: enabled
        name: "{{ item }}"
  with_items:
    - snafu
    - foo

- name: Save default domain after deleting foo/snafu
  community.datapower.action:
    domain: default
    action: SaveConfig

- name: Import the all_domains_export
  community.datapower.import_domains:
    overwrite_objects: yes
    overwrite_files: yes
    export_path: "{{all_domains_export.path}}"

- name: Save all domains
  community.datapower.action:
    domain: "{{ item }}"
    action: SaveConfig
  with_items:
    - snafu
    - foo
    - default

- name: Export objects
  community.datapower.export_config:
    domain: "{{ item }}"
    ref_objects: yes
    objects:
      - name: valcred
        class: CryptoValCred
      - name: tls-client-profile
        class: SSLClientProfile
  register: object_exports
  with_items:
    - snafu
    - foo

- name: Assert expected configuration is restored in foo/snafu domains.
  assert:
    that:
      - "{{'SSLClientProfile' in item.objects }}"
      - "{{'CryptoValCred' in item.objects }}"
  with_items: "{{ object_exports.results }}"

- name: Delete the snafu/foo application domain to verify foo is restored from foo_export and snafu is not.
  community.datapower.config:
    domain: default
    state: absent
    config:
      Domain:
        mAdminState: enabled
        name: "{{ item }}"
  with_items:
    - snafu
    - foo

- name: Save default domain after deleting foo/snafu
  community.datapower.action:
    domain:  default
    action: SaveConfig

- name: Import the foo_export
  community.datapower.import_domains:
    overwrite_objects: yes
    overwrite_files: yes
    export_path: "{{foo_domain_export.path}}"

- name: Save default/foo domain after importing foo domain.
  community.datapower.action:
    domain:  "{{ item }}"
    action: SaveConfig
  with_items:
    - default
    - foo

- name: Export objects
  community.datapower.export_config:
    domain: foo
    ref_objects: yes
    objects:
      - name: valcred
        class: CryptoValCred
      - name: tls-client-profile
        class: SSLClientProfile
  register: foo_object_exports

- name: Check that the foo import did not contain snafu domain
  community.datapower.get_config:
    domain: default
    class_name: Domain
  register: domains

- name: Assert expected configuration is restored in foo domains.
  assert:
    that:
      - "{{'SSLClientProfile' in foo_object_exports.objects }}"
      - "{{'CryptoValCred' in foo_object_exports.objects }}"

- name: Assert snafu domain did not get restored
  assert:
    that:
      - "{{ item.name != 'snafu'}}"
  with_items: "{{ domains.response.Domain }}"
