---
name: CI_roles
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  schedule:
    - cron: '0 6 * * *'

jobs:

  roles_matrix:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ansible_collections/br35ba56/datapower
    outputs:
      matrix: ${{ steps.json-list.outputs.roles-to-test }}

    steps:

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/br35ba56/datapower

      - name: Generate module list
        run: |
          find roles -type d -maxdepth 1 -mindepth 1 | cut -d '/' -f2 | awk NF | jq -sRc 'split("\n") | map(select(length > 0))' > int_test_roles.json
      - name: Set output variable
        id: json-list
        run: |
          output=$(cat int_test_roles.json)
          echo "::set-output name=roles-to-test::$output"
          echo "$output"
  roles:
    runs-on: ubuntu-20.04
    needs: roles_matrix
    defaults:
      run:
        working-directory: ansible_collections/br35ba56/datapower

    strategy:
      matrix:
        python_version:
          - "3.6"
        datapower_role: ${{ fromJson(needs.roles_matrix.outputs.matrix) }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/br35ba56/datapower

      - name: Set up Python ${{ matrix.test_scenario.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.test_scenario.python_version }}

      - name: Uninstall existing ansible
        run: sudo apt remove ansible

      - name: Ensure wheel is installed
        run: pip install wheel

      - name: Install requirements
        run: |
          export pyv=$(python -c 'from platform import python_version; print(python_version()[:3])')

          pip install --requirement requirements-${pyv}.txt
      - name: Add molecule location to path
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Build the collection
        run: ansible-galaxy collection build

      - name: Rename the build artifact
        run: mv br35ba56-datapower-*.tar.gz br35ba56-datapower-latest.tar.gz

      - name: Install collection
        run: ansible-galaxy collection install br35ba56-datapower-*.tar.gz

      - name: Run molecule test for ${{ matrix.datapower_role }}
        run: molecule test
        working-directory: ansible_collections/br35ba56/datapower/roles/${{ matrix.datapower_role }}
