name: Network Integration
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  schedule:
    - cron: '0 6 * * *'
env:
  NAMESPACE: br35ba56
  COLLECTION_NAME: datapower

jobs:
  integration:
    runs-on: ubuntu-latest
    name: Network Integration (â’¶${{ matrix.ansible }}+py${{ matrix.python }}+dp${{ matrix.datapower }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10
          - stable-2.11
          #- devel
        python:
          - 2.6
          - 2.7
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        datapower:
          - 2018.4.1.17
          - 10.0.1.4
          #- 10.0.3.0
        exclude:
          # Because ansible-test doesn't support python3.9 for Ansible 2.9
          - ansible: stable-2.9
            python: 3.9

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # it is just required to run that once as "ansible-test integration" in the docker image
          # will run on all python versions it supports.
          python-version: 3.8

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # OPTIONAL If your integration test requires Python libraries or modules from other collections
      # Install them like this
      - name: Install collection dependencies
        run: |
          ansible-galaxy collection install ansible.netcommon -p .
          ansible-galaxy collection install community.docker -p .
          pip install -r ansible_collections/community/datapower/requirements.txt
          pip install requests
          pip install docker

      - name: Inject variables into inventory
        run: |
          echo "ansible_python_interpreter=$(which python)" >> ansible_collections/community/datapower/tests/integration/inventory.networking
          echo "dp_version=${{ matrix.datapower }}" >> ansible_collections/community/datapower/tests/integration/inventory.networking

      # Run the integration tests
      - name: Run integration test
        run: ansible-test network-integration -v --color --retry-on-error --continue-on-error --diff --requirements --coverage
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

        # ansible-test support producing code coverage date
      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # See the reports at https://codecov.io/gh/GITHUBORG/REPONAME
      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
